<main class="container mx-auto px-4 sm:px-10 md:px-20 lg:px-56 max-w-2xl">
    <form id="calculationForm" class="bg-white shadow-lg rounded-lg px-6 sm:px-8 py-8 sm:py-12 mx-auto mt-8 mb-10">
        <h1 class="text-center text-2xl sm:text-3xl md:text-4xl font-semibold text-gray-800 mb-8 sm:mb-10">{{#if isEdit }}Editar{{else}}Novo{{/if}} Cálculo</h1>

        <div id="map" class="h-52 sm:h-64 w-full mb-8 border rounded-lg shadow-sm"></div>

        <!-- Campos de Origem e Destino -->
        <div class="flex flex-col sm:flex-row gap-4 sm:gap-5 mb-8">
            <div class="flex-1">
                <label for="origem" class="block mb-2 text-sm font-medium text-gray-700">Origem</label>
                <input value="{{calculation.origem}}" type="text" id="origem" class="verificar-valor-deslocamento bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-3" placeholder="Digite a origem" required />
            </div>
            <div class="flex-1">
                <label for="destino" class="block mb-2 text-sm font-medium text-gray-700">Destino</label>
                <input value="{{calculation.destino}}" type="text" id="destino" class="verificar-valor-deslocamento bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-3" placeholder="Digite o destino" required />
            </div>
        </div>

        <!-- Campos de Consumo e Preço de Combustível -->
        <div class="flex flex-col sm:flex-row gap-4 sm:gap-5 mb-8">
            <div class="flex-1">
                <label for="consumo_combustivel" class="block mb-2 text-sm font-medium text-gray-700">Média de Consumo de Combustível (km/l)</label>
                <input value="{{calculation.consumo_combustivel}}" type="text" id="consumo_combustivel" class="verificar-valor-deslocamento bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-3" placeholder="Digite o consumo médio" required />
            </div>
            <div class="flex-1">
                <label for="preco_combustivel" class="block mb-2 text-sm font-medium text-gray-700">Preço do Combustível (R$/l)</label>
                <input value="{{calculation.preco_combustivel}}" type="text" id="preco_combustivel" class="verificar-valor-deslocamento bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-3" placeholder="Digite o preço" required />
            </div>
        </div>

        <div class="flex flex-col sm:flex-row gap-4 sm:gap-5 mb-8">
            <div class="flex-1">
                <label for="locomocao" class="block mb-2 text-sm font-medium text-gray-700">Locomoção</label>
                <select id="locomocao" class="verificar-valor-deslocamento bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-3" required>
                    <option value="DRIVING" {{#if (equals calculation.locomocao 'DRIVING')}}selected{{/if}}>Carro</option>
                    <option value="BICYCLING" {{#if (equals calculation.locomocao 'BICYCLING')}}selected{{/if}}>Bicicleta</option>
                    <option value="TRANSIT" {{#if (equals calculation.locomocao 'TRANSIT')}}selected{{/if}}>Transporte Público</option>
                    <option value="WALKING" {{#if (equals calculation.locomocao 'WALKING')}}selected{{/if}}>A pé</option>
                </select>
            </div>
        </div>

        <!-- Seção de resultado -->
        <div id="resultado" class="mb-8 p-4 rounded-lg bg-gray-100 shadow-sm">
            <!-- Aqui será exibido o resultado -->
        </div>
        

        {{!-- resultado para salvar no banco --}}
        <input type="hidden" name="duracao" id="duracao" value="0">
        <input type="hidden" name="distancia" id="distancia" value="0">
        <input type="hidden" name="distancia_ida_volta" id="distancia_ida_volta" value="0">
        <input type="hidden" name="consumo" id="consumo" value="0">
        <input type="hidden" name="valor" id="valor" value="0">
        <input type="hidden" name="valor_ida_volta" id="valor_ida_volta" value="0">

        <input type="hidden" name="is_edit" id="is_edit" value="{{#if isEdit }}1{{else}}0{{/if}}">
        <input type="hidden" name="id" id="id" value="{{calculation.id}}">

        <div class="flex gap-2">
            <button id="salvar-calculo" style="display: none;" class="btn-salvar text-white bg-blue-800 hover:bg-primary-500 focus:ring-4 focus:outline-none focus:ring-blue-300 font-semibold rounded-lg text-lg w-full md:w-auto px-6 py-3 shadow-md">
                Salvar
            </button>

            <button class="btn-calcular text-white bg-primary-300 hover:bg-primary-500 focus:ring-4 focus:outline-none focus:ring-blue-300 font-semibold rounded-lg text-lg w-full md:w-auto px-6 py-3 shadow-md">
                Calcular
            </button>
            <button id="excluir-calculo" style="display: {{#if isEdit }}block{{else}}none{{/if}};" class="btn-excluir text-white bg-red-600 hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-red-300 font-semibold rounded-lg text-lg w-full md:w-auto px-6 py-3 shadow-md">
                Excluir
            </button>
        </div>
    </form>


    <script src="https://maps.googleapis.com/maps/api/js?key={{API_KEY_MAPS}}&libraries=places"></script>
    <script src="/js/google-api.js"></script>
    <script src="/js/google-maps.js"></script>

    <script type="module">
        import { isLoggedUser, getUserLogged } from '/js/utils/auth.js';
        import { errorMessage, successMessage } from '/js/utils/message.js';

        // Verifica se o usuário já está logado ao carregar a página
         window.addEventListener('DOMContentLoaded', async() => {
            if (!isLoggedUser()) {
                window.location.href = '/'; // Redireciona se o usuário já estiver logado
            }
        });

         // Captura o evento de envio do formulário
        document.getElementById('salvar-calculo').addEventListener('click', async function(e) {
            e.preventDefault();
            const user = getUserLogged();

            const userId = user?.uid; // Obtem o ID do usuário logado
            const origem = document.getElementById('origem').value;
            const destino = document.getElementById('destino').value;
            const consumo_combustivel = document.getElementById('consumo_combustivel').value;
            const preco_combustivel = document.getElementById('preco_combustivel').value;
            const locomocao = document.getElementById('locomocao').value;

            // resultados
            const duracao = document.getElementById('duracao').value;
            const distancia = document.getElementById('distancia').value;
            const distancia_ida_volta = document.getElementById('distancia_ida_volta').value;
            const consumo = document.getElementById('consumo').value;
            const valor = document.getElementById('valor').value;
            const valor_ida_volta = document.getElementById('valor_ida_volta').value;

            try {
                const response = await fetch('/calculation', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        userId,
                        origem,
                        destino,
                        consumo_combustivel,
                        preco_combustivel,
                        locomocao,

                        duracao,
                        distancia,
                        distancia_ida_volta,
                        consumo,
                        valor,
                        valor_ida_volta
                    }),
                });

                const data = await response.json();

                if (response.ok) {
                    successMessage(data.message); // Mostra mensagem de sucesso
                    setTimeout(() =>{
                        window.location.href = `/calculations/edit/${data.calculationId}`;
                    }, 1000);
                } else {
                    throw new Error(data.error);
                }
            } catch (error) {
                errorMessage('Erro ao salvar cálculo: ' + error.message);
            }
        });

        document.querySelector('.btn-calcular').addEventListener('click', async function(e) {
            const is_edit = document.getElementById('is_edit').value;

            if(is_edit == 0){
                return;
            }

            const user = getUserLogged();
            const userId = user?.uid; // Obtem o ID do usuário logado
            const id = document.getElementById('id').value;
            const origem = document.getElementById('origem').value;
            const destino = document.getElementById('destino').value;
            const consumo_combustivel = document.getElementById('consumo_combustivel').value;
            const preco_combustivel = document.getElementById('preco_combustivel').value;
            const locomocao = document.getElementById('locomocao').value;

            // resultados
            const distancia = document.getElementById('distancia').value;
            const distancia_ida_volta = document.getElementById('distancia_ida_volta').value;
            const consumo = document.getElementById('consumo').value;
            const valor = document.getElementById('valor').value;
            const valor_ida_volta = document.getElementById('valor_ida_volta').value;

            try {
                const response = await fetch(`/calculation/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        userId,
                        origem,
                        destino,
                        consumo_combustivel,
                        preco_combustivel,
                        locomocao,

                        duracao,
                        distancia,
                        distancia_ida_volta,
                        consumo,
                        valor,
                        valor_ida_volta
                    }),
                });

                const data = await response.json();

                if (response.ok) {
                    successMessage(data.message); // Mostra mensagem de sucesso
                } else {
                    throw new Error(data.error);
                }
            } catch (error) {
                errorMessage('Erro ao atualizar cálculo: ' + error.message);
            }
        });

        //excluir
        document.getElementById('excluir-calculo').addEventListener('click', async function(e) {
            e.preventDefault();

            const confirmation = confirm('Você tem certeza que deseja excluir este cálculo?');
            if (!confirmation) return; // Se o usuário cancelar a exclusão, não faz nada

            const calculationId = "{{calculation.id}}"; // Obtém o ID do cálculo que está sendo editado

            try {
                const response = await fetch(`/calculation/${calculationId}`, {
                    method: 'DELETE',
                });

                const errorData = await response.json();

                if (response.ok) {
                    successMessage("Calculo excluido")
                    setTimeout(() =>{
                        window.location.href = '/calculations'; // Redireciona após excluir
                    }, 1000);
                } else {
                    const errorData = await response.json();
                    throw new Error(errorData.error);
                }
            } catch (error) {
                errorMessage('Erro ao excluir cálculo: ' + error.message);
            }
        });

    </script>
</main>
